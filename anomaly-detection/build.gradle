/*
 * Copyright (c) 2017 Dell Inc., or its subsidiaries. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 */

group "io.pravega.anomalydetection"
version projectVersion

apply plugin: "java"
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = 'io.pravega.anomalydetection.ApplicationMain'
applicationDefaultJvmArgs = ["-Dlog4j.configuration=file:conf/log4j.properties"]

configurations {
    shadowRelocate {
    }
}

dependencies {
    compileOnly "org.slf4j:slf4j-log4j12:1.7.14"
    compile "io.pravega:pravega-connectors-flink_2.11:${pravegaConnectorsVersion}"
    compileOnly "org.apache.flink:flink-streaming-java_2.11:${flinkVersion}"
    compileOnly "org.apache.flink:flink-connector-elasticsearch5_2.11:${flinkVersion}"
    shadowRelocate "org.apache.flink:flink-connector-elasticsearch5_2.11:${flinkVersion}"
}

shadowJar {

    configurations = [project.configurations.runtime, project.configurations.shadowRelocate]

    doLast {
        project.configurations.shadowRelocate.incoming.resolutionResult.allComponents {
            if (it.id instanceof ModuleComponentIdentifier) {
                //System.out.println("displayName: " + it.id.displayName + " groupName: " + it.id.group)
                relocate(it.id.group, "es.shadow.${it.id.group}")
            }
        }
    }

    classifier = null
    mergeServiceFiles()
}

distributions {
    main {
        contents {
            into('lib') {
                from shadowJar
                from(project.configurations.shadow)
            }
        }
    }
}

run {
    standardInput = System.in

    if (project.hasProperty("argsList")) {
        args(argsList.split(' '))
    }

}